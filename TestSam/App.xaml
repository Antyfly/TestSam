<Application x:Class="TestSam.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TestSam"
             StartupUri="MainWindow/Avt.xaml">
    <Application.Resources>

        


        <Style TargetType="TextBlock" x:Key="TblAvt">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="#FFF0EBC0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="2"/>
        </Style>
        
        <Style TargetType="TextBox" x:Key="TbxAvt">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="#FF232859"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FFF0EBC0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Background" BorderThickness="1" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" TextElement.Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#FF76DFEA"/>
                                <Setter Property="BorderBrush" Value="#FF232859"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PasswordBox" x:Key="PasAvt">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="#FFF0EBC0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Background" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" TextElement.Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF232859"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#FF232859"/>
                                <Setter Property="BorderBrush" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#FFF0EBC0"/>
            <Setter Property="Foreground" Value="#FF232859"/>
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="12" BorderThickness="2"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WindowStyle" TargetType="Window">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <!--Триггер при открытие окна-->
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.4"
                                To="1"
                                Duration="0:0:0.45" />
                                <!--Duration менять время анимации, From (от значения) To (до значения)-->
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PageStyle" TargetType="Page">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <!--Триггер при открытие окна-->
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.1"
                                To="1"
                                Duration="0:0:0.40" />
                                <!--Duration менять время анимации, From (от значения) To (до значения)-->
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
